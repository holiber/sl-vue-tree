{"version":3,"sources":["webpack://SlVueTree/webpack/universalModuleDefinition","webpack://SlVueTree/webpack/bootstrap","webpack://SlVueTree/./src/sl-vue-tree.js","webpack://SlVueTree/./src/sl-vue-tree.vue?2ddf","webpack://SlVueTree/./src/sl-vue-tree.vue","webpack://SlVueTree/./node_modules/vue-loader/lib/runtime/component-normalizer.js","webpack://SlVueTree/./node_modules/isarray/index.js","webpack://SlVueTree/./node_modules/ieee754/index.js","webpack://SlVueTree/./node_modules/base64-js/index.js","webpack://SlVueTree/(webpack)/buildin/global.js","webpack://SlVueTree/./node_modules/buffer/index.js","webpack://SlVueTree/./node_modules/clone/clone.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","clone","sl_vue_tree","props","type","Array","default","edgeSize","Number","showBranches","Boolean","level","parentInd","allowMultiselect","multiselectKey","String","validator","allowedKeys","multiselectKeys","isArray","filter","keyName","indexOf","length","scrollAreaHeight","maxScrollSpeed","[object Object]","rootCursorPosition","scrollIntervalId","scrollSpeed","lastSelectedNode","mouseIsDown","isDragging","lastMousePos","x","y","preventDrag","currentValue","this","isRoot","document","addEventListener","onDocumentMouseupHandler","removeEventListener","watch","newValue","computed","getParent","cursorPosition","nodeModels","copy","getNodes","nodes","children","gaps","push","getSelected","getDraggable","methods","pos","setCursorPosition","parentPath","isVisible","map","nodeModel","ind","nodePath","concat","getNode","path","siblings","slice","getNodeSiblings","isExpanded","isDraggable","isSelectable","title","isLeaf","shapeType","isSelected","data","pathStr","JSON","stringify","isFirstChild","isLastChild","getRoot","$emit","selectedNodes","event","draggingNodes","position","toggledNode","node","preventDefault","getCursorPositionFromCoords","clientX","clientY","addToSelection","multiSelectKey","multiselectKeyIsPressed","find","key","selectedNode","newNodes","shiftSelectionMode","shiftKey","shiftSelectionStarted","traverse","emitInput","emitSelect","onMousemoveHandler","initialDraggingState","isDragStarted","$root","$el","rootRect","getBoundingClientRect","$dragInfo","$refs","dragInfo","dragInfoTop","top","scrollTop","style","marginBottom","dragInfoLeft","left","destNode","placement","select","scrollBottomLine","bottom","scrollDownSpeed","scrollTopLine","scrollTopSpeed","startScroll","stopScroll","$target","elementFromPoint","$nodeItem","getAttribute","closest","parse","nodeHeight","offsetHeight","offsetY","height","getLastNode","getFirstNode","querySelector","lastNode","resultNode","comparePaths","prevNodes","path1","path2","button","onNodeMousedownHandler","speed","setInterval","clearInterval","onNodeMouseupHandler","targetNode","stopDrag","draggingNode","checkNodeIsParent","nodeModelsToInsert","draggingNodeModel","destSiblings","destNodeModel","unshift","insertInd","splice","traverseModels","_markToDelete","emitDrop","updateNode","emitToggle","stopPropagation","$parent","patch","assign","cb","shouldStop","nodeInd","itemPath","paths","pathsStr","sourceNode","destPath","entity","render","_vm","_h","$createElement","_c","_self","staticClass","class","sl-vue-tree-root","on","mousemove","mouseleave","onMouseleaveHandler","dragend","$event","onDragendHandler","ref","_l","sl-vue-tree-selected","visibility","dragover","_v","sl-vue-tree-cursor-hover","sl-vue-tree-cursor-inside","sl-vue-tree-node-is-leaf","sl-vue-tree-node-is-folder","attrs","mousedown","mouseup","contextmenu","emitNodeContextmenu","dblclick","emitNodeDblclick","click","emitNodeClick","onExternalDragoverHandler","drop","onExternalDropHandler","gapInd","_t","_e","_s","fromCharCode","onToggleHandler","console","log","src","scopedSlots","_u","fn","directives","rawName","expression","selectionSize","_withStripped","Component","scriptExports","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","normalizeComponent","__file","__webpack_exports__","toString","arr","read","buffer","offset","isLE","mLen","nBytes","e","eLen","eMax","eBias","nBits","NaN","Infinity","Math","pow","write","rt","abs","isNaN","floor","LN2","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","parts","len2","encodeChunk","lookup","join","Uint8Array","code","Error","start","end","num","output","g","Function","eval","global","base64","ieee754","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","arg","encodingOrOffset","allocUnsafe","from","TypeError","ArrayBuffer","array","byteOffset","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","fromString","obj","isBuffer","checked","val","fromObject","assertSize","size","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","b","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","buf","readUInt16BE","foundIndex","found","j","hexWrite","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","utf8Slice","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","Symbol","species","fill","allocUnsafeSlow","_isBuffer","compare","a","list","swap16","swap32","swap64","arguments","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","max","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","leadSurrogate","trim","replace","stringtrim","base64clean","dst","_instanceof","nativeMap","nativeSet","nativePromise","Map","_","Set","Promise","circular","depth","includeNonEnumerable","allParents","allChildren","useBuffer","_clone","child","proto","resolve","reject","then","err","__isArray","__isRegExp","RegExp","source","__getRegExpFlags","lastIndex","__isDate","Date","getTime","create","getPrototypeOf","index","forEach","keyChild","valueChild","entryChild","getOwnPropertyDescriptor","getOwnPropertySymbols","symbols","symbol","descriptor","allPropertyNames","getOwnPropertyNames","propertyName","__objToStr","re","flags","ignoreCase","multiline","clonePrototype"],"mappings":"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","file":"sl-vue-tree.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SlVueTree\"] = factory();\n\telse\n\t\troot[\"SlVueTree\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","var clone = require('clone');\n\nexport default {\n    name: 'sl-vue-tree',\n    props: {\n        value: {\n            type: Array,\n            default: () => []\n        },\n        edgeSize: {\n            type: Number,\n            default: 3\n        },\n        showBranches: {\n            type: Boolean,\n            default: false\n        },\n        level: {\n            type: Number,\n            default: 0\n        },\n        parentInd: {\n            type: Number\n        },\n        allowMultiselect: {\n            type: Boolean,\n            default: true\n        },\n        multiselectKey: {\n            type: [String, Array],\n            default: ['ctrlKey', 'metaKey'],\n            validator: function(value) {\n                let allowedKeys = ['ctrlKey', 'metaKey', 'altKey'];\n                let multiselectKeys = Array.isArray(value) ? value : [value];\n                multiselectKeys = multiselectKeys.filter(keyName => allowedKeys.indexOf(keyName) !== -1);\n                return !!multiselectKeys.length;\n            }\n        },\n        scrollAreaHeight: {\n            type: Number,\n            default: 70\n        },\n        maxScrollSpeed: {\n            type: Number,\n            default: 20\n        }\n    },\n\n    data() {\n        return {\n            rootCursorPosition: null,\n            scrollIntervalId: 0,\n            scrollSpeed: 0,\n            lastSelectedNode: null,\n            mouseIsDown: false,\n            isDragging: false,\n            lastMousePos: { x: 0, y: 0 },\n            preventDrag: false,\n            currentValue: this.value\n        };\n    },\n\n    mounted() {\n        if (this.isRoot) {\n            document.addEventListener('mouseup', this.onDocumentMouseupHandler);\n        }\n    },\n\n    beforeDestroy() {\n        document.removeEventListener('mouseup', this.onDocumentMouseupHandler);\n    },\n\n    watch: {\n        value: function(newValue) {\n            this.currentValue = newValue;\n        }\n    },\n\n    computed: {\n        cursorPosition() {\n            if (this.isRoot) return this.rootCursorPosition;\n            return this.getParent().cursorPosition;\n        },\n\n        nodes() {\n            if (this.isRoot) {\n                const nodeModels = this.copy(this.currentValue);\n                return this.getNodes(nodeModels);\n            }\n\n            return this.getParent().nodes[this.parentInd].children;\n        },\n        /**\n         * gaps is using for nodes indentation\n         * @returns {number[]}\n         */\n        gaps() {\n            const gaps = [];\n            let i = this.level - 1;\n            if (!this.showBranches) i++;\n            while (i-- > 0) gaps.push(i);\n            return gaps;\n        },\n\n        isRoot() {\n            return !this.level\n        },\n\n        selectionSize() {\n            return this.getSelected().length;\n        },\n\n        dragSize() {\n            return this.getDraggable().length;\n        }\n    },\n    methods: {\n\n        setCursorPosition(pos) {\n            if (this.isRoot) {\n                this.rootCursorPosition = pos;\n                return;\n            }\n            this.getParent().setCursorPosition(pos);\n        },\n\n        getNodes(nodeModels, parentPath = [], isVisible = true) {\n\n            return nodeModels.map((nodeModel, ind) => {\n                const nodePath = parentPath.concat(ind);\n                return this.getNode(nodePath, nodeModel, nodeModels, isVisible);\n            })\n        },\n\n        getNode(\n            path,\n            nodeModel = null,\n            siblings = null,\n            isVisible = null\n        ) {\n            const ind = path.slice(-1)[0];\n\n            // calculate nodeModel, siblings, isVisible fields if it is not passed as arguments\n            siblings = siblings || this.getNodeSiblings(this.currentValue, path);\n            nodeModel = nodeModel || (siblings && siblings[ind]) || null;\n\n            if (isVisible == null) {\n                isVisible = this.isVisible(path);\n            }\n\n            if (!nodeModel) return null;\n\n            const isExpanded = nodeModel.isExpanded == void 0 ? true : !!nodeModel.isExpanded;\n            const isDraggable = nodeModel.isDraggable == void 0 ? true : !!nodeModel.isDraggable;\n            const isSelectable = nodeModel.isSelectable == void 0 ? true : !!nodeModel.isSelectable;\n\n            const node = {\n\n                // define the all ISlTreeNodeModel props\n                title: nodeModel.title,\n                isLeaf: !!nodeModel.isLeaf,\n                shapeType: !!nodeModel.shapeType,\n                children: nodeModel.children ? this.getNodes(nodeModel.children, path, isExpanded) : [],\n                isSelected: !!nodeModel.isSelected,\n                isExpanded,\n                isVisible,\n                isDraggable,\n                isSelectable,\n                data: nodeModel.data !== void 0 ? nodeModel.data : {},\n\n                // define the all ISlTreeNode computed props\n                path: path,\n                pathStr: JSON.stringify(path),\n                level: path.length,\n                ind,\n                isFirstChild: ind == 0,\n                isLastChild: ind === siblings.length - 1\n            };\n            return node;\n        },\n\n        isVisible(path) {\n            if (path.length < 2) return true;\n            let nodeModels = this.currentValue;\n\n            for (let i = 0; i < path.length - 1; i++) {\n                let ind = path[i];\n                let nodeModel = nodeModels[ind];\n                let isExpanded = nodeModel.isExpanded == void 0 ? true : !!nodeModel.isExpanded;\n                if (!isExpanded) return false;\n                nodeModels = nodeModel.children;\n            }\n\n            return true;\n        },\n\n        emitInput(newValue) {\n            this.currentValue = newValue;\n            this.getRoot().$emit('input', newValue);\n        },\n\n        emitSelect(selectedNodes, event) {\n            this.getRoot().$emit('select', selectedNodes, event);\n        },\n\n        emitDrop(draggingNodes, position, event) {\n            this.getRoot().$emit('drop', draggingNodes, position, event);\n        },\n\n        emitToggle(toggledNode, event) {\n            this.getRoot().$emit('toggle', toggledNode, event);\n        },\n\n        emitNodeClick(node, event) {\n            this.getRoot().$emit('nodeclick', node, event);\n        },\n\n        emitNodeDblclick(node, event) {\n            this.getRoot().$emit('nodedblclick', node, event);\n        },\n\n        emitNodeContextmenu(node, event) {\n            this.getRoot().$emit('nodecontextmenu', node, event);\n        },\n\n        onExternalDragoverHandler(node, event) {\n            event.preventDefault();\n            const root = this.getRoot();\n            const cursorPosition = root.getCursorPositionFromCoords(event.clientX, event.clientY);\n            root.setCursorPosition(cursorPosition);\n            root.$emit('externaldragover', cursorPosition, event);\n        },\n\n        onExternalDropHandler(node, event) {\n            const root = this.getRoot();\n            const cursorPosition = root.getCursorPositionFromCoords(event.clientX, event.clientY);\n            root.$emit('externaldrop', cursorPosition, event);\n            this.setCursorPosition(null);\n        },\n\n        select(path, addToSelection = false, event = null) {\n            const multiselectKeys = Array.isArray(this.multiSelectKey) ?\n                this.multiselectKey : [this.multiselectKey];\n            const multiselectKeyIsPressed = event && !!multiselectKeys.find(key => event[key]);\n            addToSelection = (multiselectKeyIsPressed || addToSelection) && this.allowMultiselect;\n\n            const selectedNode = this.getNode(path);\n            if (!selectedNode) return null;\n            const newNodes = this.copy(this.currentValue);\n            const shiftSelectionMode = this.allowMultiselect && event && event.shiftKey && this.lastSelectedNode;\n            const selectedNodes = [];\n            let shiftSelectionStarted = false;\n\n            this.traverse((node, nodeModel) => {\n\n\n                if (shiftSelectionMode) {\n                    if (node.pathStr === selectedNode.pathStr || node.pathStr === this.lastSelectedNode.pathStr) {\n                        nodeModel.isSelected = node.isSelectable;\n                        shiftSelectionStarted = !shiftSelectionStarted;\n                    }\n                    if (shiftSelectionStarted) nodeModel.isSelected = node.isSelectable;\n                } else if (node.pathStr === selectedNode.pathStr) {\n                    nodeModel.isSelected = node.isSelectable;\n                } else if (!addToSelection) {\n                    if (nodeModel.isSelected) nodeModel.isSelected = false;\n                }\n\n                if (nodeModel.isSelected) selectedNodes.push(node);\n\n            }, newNodes);\n\n\n            this.lastSelectedNode = selectedNode;\n            this.emitInput(newNodes);\n            this.emitSelect(selectedNodes, event);\n            return selectedNode;\n        },\n\n        onMousemoveHandler(event) {\n            if (!this.isRoot) {\n                this.getRoot().onMousemoveHandler(event);\n                return;\n            }\n\n            if (this.preventDrag) return;\n\n            const initialDraggingState = this.isDragging;\n            const isDragging =\n                this.isDragging || (\n                    this.mouseIsDown &&\n                    (this.lastMousePos.x !== event.clientX || this.lastMousePos.y !== event.clientY)\n                );\n\n            const isDragStarted = initialDraggingState === false && isDragging === true;\n\n            this.lastMousePos = {\n                x: event.clientX,\n                y: event.clientY\n            };\n\n            if (!isDragging) return;\n\n            const $root = this.getRoot().$el;\n            const rootRect = $root.getBoundingClientRect();\n            const $dragInfo = this.$refs.dragInfo;\n            const dragInfoTop = (event.clientY - rootRect.top + $root.scrollTop - ($dragInfo.style.marginBottom | 0));\n            const dragInfoLeft = (event.clientX - rootRect.left);\n\n            $dragInfo.style.top = dragInfoTop + 'px';\n            $dragInfo.style.left = dragInfoLeft + 'px';\n\n            const cursorPosition = this.getCursorPositionFromCoords(event.clientX, event.clientY);\n            const destNode = cursorPosition.node;\n            const placement = cursorPosition.placement;\n\n            if (isDragStarted && !destNode.isSelected) {\n                this.select(destNode.path, false, event);\n            }\n\n            const draggableNodes = this.getDraggable();\n            if (!draggableNodes.length) {\n                this.preventDrag = true;\n                return;\n            }\n\n            this.isDragging = isDragging;\n\n            this.setCursorPosition({ node: destNode, placement });\n\n            const scrollBottomLine = rootRect.bottom - this.scrollAreaHeight;\n            const scrollDownSpeed = (event.clientY - scrollBottomLine) / (rootRect.bottom - scrollBottomLine);\n            const scrollTopLine = rootRect.top + this.scrollAreaHeight;\n            const scrollTopSpeed = (scrollTopLine - event.clientY) / (scrollTopLine - rootRect.top);\n\n            if (scrollDownSpeed > 0) {\n                this.startScroll(scrollDownSpeed);\n            } else if (scrollTopSpeed > 0) {\n                this.startScroll(-scrollTopSpeed)\n            } else {\n                this.stopScroll();\n            }\n        },\n\n        getCursorPositionFromCoords(x, y) {\n            const $target = document.elementFromPoint(x, y);\n            const $nodeItem = $target.getAttribute('path') ? $target : $target.closest('[path]');\n            let destNode;\n            let placement;\n\n            if ($nodeItem) {\n\n                if (!$nodeItem) return;\n\n                destNode = this.getNode(JSON.parse($nodeItem.getAttribute('path')));\n\n                const nodeHeight = $nodeItem.offsetHeight;\n                const edgeSize = this.edgeSize;\n                const offsetY = y - $nodeItem.getBoundingClientRect().top;\n\n\n                if (destNode.isLeaf) {\n                    placement = offsetY >= nodeHeight / 2 ? 'after' : 'before';\n                } else {\n                    if (offsetY <= edgeSize) {\n                        placement = 'before';\n                    } else if (offsetY >= nodeHeight - edgeSize) {\n                        placement = 'after';\n                    } else {\n                        placement = 'inside';\n                    }\n                }\n            } else {\n                const $root = this.getRoot().$el;\n                const rootRect = $root.getBoundingClientRect();\n                if (y > rootRect.top + (rootRect.height / 2)) {\n                    placement = 'after';\n                    destNode = this.getLastNode();\n                } else {\n                    placement = 'before';\n                    destNode = this.getFirstNode();\n                }\n            }\n\n            return { node: destNode, placement };\n        },\n\n        onMouseleaveHandler(event) {\n            if (!this.isRoot || !this.isDragging) return;\n            const $root = this.getRoot().$el;\n            const rootRect = $root.getBoundingClientRect();\n            if (event.clientY >= rootRect.bottom) {\n                this.setCursorPosition({ node: this.nodes.slice(-1)[0], placement: 'after' });\n            } else if (event.clientY < rootRect.top) {\n                this.setCursorPosition({ node: this.getFirstNode(), placement: 'before' });\n            }\n        },\n\n        getNodeEl(path) {\n            this.getRoot().$el.querySelector(`[path=\"${JSON.stringify(path)}\"]`);\n        },\n\n        getLastNode() {\n            let lastNode = null;\n            this.traverse((node) => {\n                lastNode = node;\n            });\n            return lastNode;\n        },\n\n        getFirstNode() {\n            return this.getNode([0]);\n        },\n\n        getNextNode(path, filter = null) {\n\n            let resultNode = null;\n\n            this.traverse((node) => {\n                if (this.comparePaths(node.path, path) < 1) return;\n\n                if (!filter || filter(node)) {\n                    resultNode = node;\n                    return false; // stop traverse\n                }\n\n            });\n\n            return resultNode;\n        },\n\n        getPrevNode(path, filter) {\n            let prevNodes = [];\n\n            this.traverse((node) => {\n                if (this.comparePaths(node.path, path) >= 0) {\n                    return false;\n                }\n                prevNodes.push(node);\n            });\n\n            let i = prevNodes.length;\n            while (i--) {\n                const node = prevNodes[i];\n                if (!filter || filter(node)) return node;\n            }\n\n            return null;\n        },\n\n        /**\n         * returns 1 if path1 > path2\n         * returns -1 if path1 < path2\n         * returns 0 if path1 == path2\n         *\n         * examples\n         *\n         * [1, 2, 3] < [1, 2, 4]\n         * [1, 1, 3] < [1, 2, 3]\n         * [1, 2, 3] > [1, 2, 0]\n         * [1, 2, 3] > [1, 1, 3]\n         * [1, 2] < [1, 2, 0]\n         *\n         */\n        comparePaths(path1, path2) {\n            for (let i = 0; i < path1.length; i++) {\n                if (path2[i] == void 0) return 1;\n                if (path1[i] > path2[i]) return 1;\n                if (path1[i] < path2[i]) return -1;\n            }\n            return path2[path1.length] == void 0 ? 0 : -1;\n        },\n\n        onNodeMousedownHandler(event, node) {\n            // handle only left mouse button\n            if (event.button !== 0) return;\n\n            if (!this.isRoot) {\n                this.getRoot().onNodeMousedownHandler(event, node);\n                return;\n            }\n            this.mouseIsDown = true;\n        },\n\n\n        startScroll(speed) {\n            const $root = this.getRoot().$el;\n            if (this.scrollSpeed === speed) {\n                return;\n            } else if (this.scrollIntervalId) {\n                this.stopScroll();\n            }\n\n            this.scrollSpeed = speed;\n            this.scrollIntervalId = setInterval(() => {\n                $root.scrollTop += this.maxScrollSpeed * speed;\n            }, 20);\n        },\n\n        stopScroll() {\n            clearInterval(this.scrollIntervalId);\n            this.scrollIntervalId = 0;\n            this.scrollSpeed = 0;\n        },\n\n        onDocumentMouseupHandler(event) {\n            if (this.isDragging) this.onNodeMouseupHandler(event);\n        },\n\n        onNodeMouseupHandler(event, targetNode = null) {\n\n            // handle only left mouse button\n            if (event.button !== 0) return;\n\n            if (!this.isRoot) {\n                this.getRoot().onNodeMouseupHandler(event, targetNode);\n                return;\n            }\n\n            this.mouseIsDown = false;\n\n            if (!this.isDragging && targetNode && !this.preventDrag) {\n                this.select(targetNode.path, false, event);\n            }\n\n            this.preventDrag = false;\n\n            if (!this.cursorPosition) {\n                this.stopDrag();\n                return;\n            };\n\n\n            const draggingNodes = this.getDraggable();\n\n            // check that nodes is possible to insert\n            for (let draggingNode of draggingNodes) {\n                if (draggingNode.pathStr == this.cursorPosition.node.pathStr) {\n                    this.stopDrag();\n                    return;\n                }\n\n                if (this.checkNodeIsParent(draggingNode, this.cursorPosition.node)) {\n                    this.stopDrag();\n                    return;\n                };\n            }\n\n            const newNodes = this.copy(this.currentValue);\n            const nodeModelsToInsert = [];\n\n            // find and mark dragging model to delete\n            for (let draggingNode of draggingNodes) {\n                const sourceSiblings = this.getNodeSiblings(newNodes, draggingNode.path);\n                const draggingNodeModel = sourceSiblings[draggingNode.ind];\n                nodeModelsToInsert.push(this.copy(draggingNodeModel));\n                draggingNodeModel['_markToDelete'] = true;\n            }\n\n\n            // insert dragging nodes to the new place\n            const destNode = this.cursorPosition.node;\n            const destSiblings = this.getNodeSiblings(newNodes, destNode.path);\n            const destNodeModel = destSiblings[destNode.ind];\n\n            if (this.cursorPosition.placement === 'inside') {\n                destNodeModel.children = destNodeModel.children || [];\n                destNodeModel.children.unshift(...nodeModelsToInsert);\n            } else {\n                const insertInd = this.cursorPosition.placement === 'before' ?\n                    destNode.ind :\n                    destNode.ind + 1;\n\n                destSiblings.splice(insertInd, 0, ...nodeModelsToInsert);\n            }\n\n\n\n            // delete dragging node from the old place\n            this.traverseModels((nodeModel, siblings, ind) => {\n                if (!nodeModel._markToDelete) return;\n                siblings.splice(ind, 1);\n            }, newNodes);\n\n\n            this.lastSelectedNode = null;\n            this.emitInput(newNodes);\n            this.emitDrop(draggingNodes, this.cursorPosition, event);\n            this.stopDrag();\n        },\n\n\n        onToggleHandler(event, node) {\n            this.updateNode(node.path, { isExpanded: !node.isExpanded });\n            this.emitToggle(node, event);\n            event.stopPropagation();\n        },\n\n        stopDrag() {\n            this.isDragging = false;\n            this.mouseIsDown = false;\n            this.setCursorPosition(null);\n            this.stopScroll();\n        },\n\n\n        getParent() {\n            return this.$parent;\n        },\n\n        getRoot() {\n            if (this.isRoot) return this;\n            return this.getParent().getRoot();\n        },\n\n        getNodeSiblings(nodes, path) {\n            if (path.length === 1) return nodes;\n            return this.getNodeSiblings(nodes[path[0]].children, path.slice(1));\n        },\n\n\n        updateNode(path, patch) {\n            if (!this.isRoot) {\n                this.getParent().updateNode(path, patch);\n                return;\n            }\n\n            const pathStr = JSON.stringify(path);\n            const newNodes = this.copy(this.currentValue);\n            this.traverse((node, nodeModel) => {\n                if (node.pathStr !== pathStr) return;\n                Object.assign(nodeModel, patch);\n            }, newNodes);\n\n            this.emitInput(newNodes);\n        },\n\n        getSelected() {\n            const selectedNodes = [];\n            this.traverse((node) => {\n                if (node.isSelected) selectedNodes.push(node);\n            });\n            return selectedNodes;\n        },\n\n        getDraggable() {\n            const selectedNodes = [];\n            this.traverse((node) => {\n                if (node.isSelected && node.isDraggable) selectedNodes.push(node);\n            });\n            return selectedNodes;\n        },\n\n\n        traverse(\n            cb,\n            nodeModels = null,\n            parentPath = []\n        ) {\n            if (!nodeModels) nodeModels = this.currentValue;\n\n            let shouldStop = false;\n\n            const nodes = [];\n\n            for (let nodeInd = 0; nodeInd < nodeModels.length; nodeInd++) {\n                const nodeModel = nodeModels[nodeInd];\n                const itemPath = parentPath.concat(nodeInd);\n                const node = this.getNode(itemPath, nodeModel, nodeModels);\n                shouldStop = cb(node, nodeModel, nodeModels) === false;\n                nodes.push(node);\n\n                if (shouldStop) break;\n\n                if (nodeModel.children) {\n                    shouldStop = this.traverse(cb, nodeModel.children, itemPath) === false;\n                    if (shouldStop) break;\n                }\n            }\n\n            return !shouldStop ? nodes : false;\n        },\n\n        traverseModels(cb, nodeModels) {\n            let i = nodeModels.length;\n            while (i--) {\n                const nodeModel = nodeModels[i];\n                if (nodeModel.children) this.traverseModels(cb, nodeModel.children);\n                cb(nodeModel, nodeModels, i);\n            }\n            return nodeModels;\n        },\n\n        remove(paths) {\n            const pathsStr = paths.map(path => JSON.stringify(path));\n            const newNodes = this.copy(this.currentValue);\n            this.traverse((node, nodeModel, siblings) => {\n                for (const pathStr of pathsStr) {\n                    if (node.pathStr === pathStr) nodeModel._markToDelete = true;\n                }\n            }, newNodes);\n\n            this.traverseModels((nodeModel, siblings, ind) => {\n                if (!nodeModel._markToDelete) return;\n                siblings.splice(ind, 1);\n            }, newNodes);\n\n            this.emitInput(newNodes);\n        },\n\n        checkNodeIsParent(sourceNode, destNode) {\n            const destPath = destNode.path;\n            return JSON.stringify(destPath.slice(0, sourceNode.path.length)) == sourceNode.pathStr;\n        },\n\n        copy(entity) {\n            return clone(entity)\n        }\n\n    }\n};","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      staticClass: \"sl-vue-tree\",\n      class: { \"sl-vue-tree-root\": _vm.isRoot },\n      on: {\n        mousemove: _vm.onMousemoveHandler,\n        mouseleave: _vm.onMouseleaveHandler,\n        dragend: function($event) {\n          _vm.onDragendHandler(null, $event)\n        }\n      }\n    },\n    [\n      _c(\n        \"div\",\n        { ref: \"nodes\", staticClass: \"sl-vue-tree-nodes-list\" },\n        [\n          _vm._l(_vm.nodes, function(node, nodeInd) {\n            return _c(\n              \"div\",\n              {\n                staticClass: \"sl-vue-tree-node\",\n                class: { \"sl-vue-tree-selected\": node.isSelected }\n              },\n              [\n                _c(\"div\", {\n                  staticClass: \"sl-vue-tree-cursor sl-vue-tree-cursor_before\",\n                  style: {\n                    visibility:\n                      _vm.cursorPosition &&\n                      _vm.cursorPosition.node.pathStr === node.pathStr &&\n                      _vm.cursorPosition.placement === \"before\"\n                        ? \"visible\"\n                        : \"hidden\"\n                  },\n                  on: {\n                    dragover: function($event) {\n                      $event.preventDefault()\n                    }\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  {\n                    staticClass: \"sl-vue-tree-node-item\",\n                    class: {\n                      \"sl-vue-tree-cursor-hover\":\n                        _vm.cursorPosition &&\n                        _vm.cursorPosition.node.pathStr === node.pathStr,\n\n                      \"sl-vue-tree-cursor-inside\":\n                        _vm.cursorPosition &&\n                        _vm.cursorPosition.placement === \"inside\" &&\n                        _vm.cursorPosition.node.pathStr === node.pathStr,\n                      \"sl-vue-tree-node-is-leaf\": node.isLeaf,\n                      \"sl-vue-tree-node-is-folder\": !node.isLeaf\n                    },\n                    attrs: { path: node.pathStr },\n                    on: {\n                      mousedown: function($event) {\n                        _vm.onNodeMousedownHandler($event, node)\n                      },\n                      mouseup: function($event) {\n                        _vm.onNodeMouseupHandler($event, node)\n                      },\n                      contextmenu: function($event) {\n                        _vm.emitNodeContextmenu(node, $event)\n                      },\n                      dblclick: function($event) {\n                        _vm.emitNodeDblclick(node, $event)\n                      },\n                      click: function($event) {\n                        _vm.emitNodeClick(node, $event)\n                      },\n                      dragover: function($event) {\n                        _vm.onExternalDragoverHandler(node, $event)\n                      },\n                      drop: function($event) {\n                        _vm.onExternalDropHandler(node, $event)\n                      }\n                    }\n                  },\n                  [\n                    _vm._l(_vm.gaps, function(gapInd) {\n                      return _c(\"div\", { staticClass: \"sl-vue-tree-gap\" })\n                    }),\n                    _vm._v(\" \"),\n                    _vm.level && _vm.showBranches\n                      ? _c(\n                          \"div\",\n                          { staticClass: \"sl-vue-tree-branch\" },\n                          [\n                            _vm._t(\n                              \"branch\",\n                              [\n                                !node.isLastChild\n                                  ? _c(\"span\", [\n                                      _vm._v(\n                                        \"\\n            \" +\n                                          _vm._s(String.fromCharCode(0x251c)) +\n                                          _vm._s(String.fromCharCode(0x2500)) +\n                                          \" \\n          \"\n                                      )\n                                    ])\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                node.isLastChild\n                                  ? _c(\"span\", [\n                                      _vm._v(\n                                        \"\\n            \" +\n                                          _vm._s(String.fromCharCode(0x2514)) +\n                                          _vm._s(String.fromCharCode(0x2500)) +\n                                          \" \\n          \"\n                                      )\n                                    ])\n                                  : _vm._e()\n                              ],\n                              { node: node }\n                            )\n                          ],\n                          2\n                        )\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"sl-vue-tree-title\" }, [\n                      !node.isLeaf\n                        ? _c(\n                            \"span\",\n                            {\n                              staticClass: \"sl-vue-tree-toggle\",\n                              on: {\n                                click: function($event) {\n                                  _vm.onToggleHandler($event, node)\n                                }\n                              }\n                            },\n                            [\n                              _vm._t(\n                                \"toggle\",\n                                [\n                                  _c(\n                                    \"span\",\n                                    {\n                                      on: {\n                                        click: function($event) {\n                                          _vm.console.log(node)\n                                        }\n                                      }\n                                    },\n                                    [\n                                      !node.isLeaf && !node.isExpanded\n                                        ? _c(\"img\", {\n                                            attrs: {\n                                              src:\n                                                \"https://s3-ap-northeast-1.amazonaws.com/labelweb/sl-vue-tree/arrowDown.png\"\n                                            }\n                                          })\n                                        : _vm._e(),\n                                      _vm._v(\" \"),\n                                      !node.isLeaf && node.isExpanded\n                                        ? _c(\"img\", {\n                                            attrs: {\n                                              src:\n                                                \"https://s3-ap-northeast-1.amazonaws.com/labelweb/sl-vue-tree/arrowRight.png\"\n                                            }\n                                          })\n                                        : _vm._e()\n                                    ]\n                                  ),\n                                  _vm._v(\" \"),\n                                  !node.isLeaf\n                                    ? _c(\"img\", {\n                                        attrs: {\n                                          src:\n                                            \"https://s3-ap-northeast-1.amazonaws.com/labelweb/sl-vue-tree/folder.png\"\n                                        }\n                                      })\n                                    : _vm._e(),\n                                  _vm._v(\" \"),\n                                  node.shapeType\n                                    ? _c(\"img\", {\n                                        attrs: {\n                                          src:\n                                            \"https://s3-ap-northeast-1.amazonaws.com/labelweb/sl-vue-tree/simpleTextIcon.png\"\n                                        }\n                                      })\n                                    : _vm._e()\n                                ],\n                                { node: node }\n                              )\n                            ],\n                            2\n                          )\n                        : _vm._e()\n                    ]),\n                    _vm._v(\" \"),\n                    _vm._t(\"title\", [_vm._v(_vm._s(node.title))], {\n                      node: node\n                    }),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      { staticClass: \"sl-vue-tree-sidebar\" },\n                      [_vm._t(\"sidebar\", null, { node: node })],\n                      2\n                    )\n                  ],\n                  2\n                ),\n                _vm._v(\" \"),\n                node.children && node.children.length && node.isExpanded\n                  ? _c(\"sl-vue-tree\", {\n                      attrs: {\n                        value: node.children,\n                        level: node.level,\n                        parentInd: nodeInd,\n                        allowMultiselect: _vm.allowMultiselect,\n                        edgeSize: _vm.edgeSize,\n                        showBranches: _vm.showBranches\n                      },\n                      on: {\n                        dragover: function($event) {\n                          $event.preventDefault()\n                        }\n                      },\n                      scopedSlots: _vm._u([\n                        {\n                          key: \"title\",\n                          fn: function(ref) {\n                            var node = ref.node\n                            return [\n                              _vm._t(\"title\", [_vm._v(_vm._s(node.title))], {\n                                node: node\n                              })\n                            ]\n                          }\n                        },\n                        {\n                          key: \"toggle\",\n                          fn: function(ref) {\n                            var node = ref.node\n                            return [\n                              _vm._t(\n                                \"toggle\",\n                                [\n                                  _c(\"span\", [\n                                    _vm._v(\n                                      \"\\n             \" +\n                                        _vm._s(\n                                          !node.isLeaf\n                                            ? node.isExpanded\n                                              ? \"-\"\n                                              : \"+\"\n                                            : \"\"\n                                        ) +\n                                        \"\\n          \"\n                                    )\n                                  ])\n                                ],\n                                { node: node }\n                              )\n                            ]\n                          }\n                        },\n                        {\n                          key: \"sidebar\",\n                          fn: function(ref) {\n                            var node = ref.node\n                            return [_vm._t(\"sidebar\", null, { node: node })]\n                          }\n                        }\n                      ])\n                    })\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"div\", {\n                  staticClass: \"sl-vue-tree-cursor sl-vue-tree-cursor_after\",\n                  style: {\n                    visibility:\n                      _vm.cursorPosition &&\n                      _vm.cursorPosition.node.pathStr === node.pathStr &&\n                      _vm.cursorPosition.placement === \"after\"\n                        ? \"visible\"\n                        : \"hidden\"\n                  },\n                  on: {\n                    dragover: function($event) {\n                      $event.preventDefault()\n                    }\n                  }\n                })\n              ],\n              1\n            )\n          }),\n          _vm._v(\" \"),\n          _vm.isRoot\n            ? _c(\n                \"div\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.isDragging,\n                      expression: \"isDragging\"\n                    }\n                  ],\n                  ref: \"dragInfo\",\n                  staticClass: \"sl-vue-tree-drag-info\"\n                },\n                [\n                  _vm._t(\"draginfo\", [\n                    _vm._v(\n                      \"\\n        Items: \" +\n                        _vm._s(_vm.selectionSize) +\n                        \"\\n      \"\n                    )\n                  ])\n                ],\n                2\n              )\n            : _vm._e()\n        ],\n        2\n      )\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\nexport { render, staticRenderFns }\nif (module.hot) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-hot-reload-api\")      .rerender(\"data-v-539decb0\", { render: render, staticRenderFns: staticRenderFns })\n  }\n}","var disposed = false\n/* script */\nexport * from \"!!!./sl-vue-tree.js\"\nimport __vue_script__ from \"!!!./sl-vue-tree.js\"/* template */\nimport {render as __vue_render__, staticRenderFns as __vue_static_render_fns__} from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-539decb0\\\",\\\"hasScoped\\\":false,\\\"optionsId\\\":\\\"0\\\",\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./sl-vue-tree.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nimport normalizeComponent from \"!../node_modules/vue-loader/lib/runtime/component-normalizer\"\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_render__,\n  __vue_static_render_fns__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"src/sl-vue-tree.vue\"\n\n/* hot reload */\nif (module.hot) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-539decb0\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-539decb0\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nexport default Component.exports\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  scriptExports = scriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof scriptExports.default\n  if (type === 'object' || type === 'function') {\n    scriptExports = scriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var clone = (function() {\n'use strict';\n\nfunction _instanceof(obj, type) {\n  return type != null && obj instanceof type;\n}\n\nvar nativeMap;\ntry {\n  nativeMap = Map;\n} catch(_) {\n  // maybe a reference error because no `Map`. Give it a dummy value that no\n  // value will ever be an instanceof.\n  nativeMap = function() {};\n}\n\nvar nativeSet;\ntry {\n  nativeSet = Set;\n} catch(_) {\n  nativeSet = function() {};\n}\n\nvar nativePromise;\ntry {\n  nativePromise = Promise;\n} catch(_) {\n  nativePromise = function() {};\n}\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n * @param `includeNonEnumerable` - set to true if the non-enumerable properties\n *    should be cloned as well. Non-enumerable properties on the prototype\n *    chain will be ignored. (optional - false by default)\n*/\nfunction clone(parent, circular, depth, prototype, includeNonEnumerable) {\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    includeNonEnumerable = circular.includeNonEnumerable;\n    circular = circular.circular;\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth === 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      child = new nativeMap();\n    } else if (_instanceof(parent, nativeSet)) {\n      child = new nativeSet();\n    } else if (_instanceof(parent, nativePromise)) {\n      child = new nativePromise(function (resolve, reject) {\n        parent.then(function(value) {\n          resolve(_clone(value, depth - 1));\n        }, function(err) {\n          reject(_clone(err, depth - 1));\n        });\n      });\n    } else if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      if (Buffer.allocUnsafe) {\n        // Node.js >= 4.5.0\n        child = Buffer.allocUnsafe(parent.length);\n      } else {\n        // Older Node.js versions\n        child = new Buffer(parent.length);\n      }\n      parent.copy(child);\n      return child;\n    } else if (_instanceof(parent, Error)) {\n      child = Object.create(parent);\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      parent.forEach(function(value, key) {\n        var keyChild = _clone(key, depth - 1);\n        var valueChild = _clone(value, depth - 1);\n        child.set(keyChild, valueChild);\n      });\n    }\n    if (_instanceof(parent, nativeSet)) {\n      parent.forEach(function(value) {\n        var entryChild = _clone(value, depth - 1);\n        child.add(entryChild);\n      });\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(parent);\n      for (var i = 0; i < symbols.length; i++) {\n        // Don't need to worry about cloning a symbol because it is a primitive,\n        // like a number or string.\n        var symbol = symbols[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\n        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\n          continue;\n        }\n        child[symbol] = _clone(parent[symbol], depth - 1);\n        if (!descriptor.enumerable) {\n          Object.defineProperty(child, symbol, {\n            enumerable: false\n          });\n        }\n      }\n    }\n\n    if (includeNonEnumerable) {\n      var allPropertyNames = Object.getOwnPropertyNames(parent);\n      for (var i = 0; i < allPropertyNames.length; i++) {\n        var propertyName = allPropertyNames[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\n        if (descriptor && descriptor.enumerable) {\n          continue;\n        }\n        child[propertyName] = _clone(parent[propertyName], depth - 1);\n        Object.defineProperty(child, propertyName, {\n          enumerable: false\n        });\n      }\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n}\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n}\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n}\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n}\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n}\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n"],"sourceRoot":""}
{"version":3,"sources":["webpack://SlVueTree/webpack/universalModuleDefinition","webpack://SlVueTree/webpack/bootstrap","webpack://SlVueTree/./src/sl-vue-tree.js","webpack://SlVueTree/./src/sl-vue-tree.vue?75ef","webpack://SlVueTree/./src/sl-vue-tree.vue","webpack://SlVueTree/./node_modules/vue-loader/lib/runtime/component-normalizer.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","sl_vue_tree","props","type","Array","default","edgeSize","Number","showBranches","Boolean","level","parentInd","allowMultiselect","allowToggleBranch","multiselectKey","String","validator","allowedKeys","multiselectKeys","isArray","filter","keyName","indexOf","length","scrollAreaHeight","maxScrollSpeed","data","rootCursorPosition","scrollIntervalId","scrollSpeed","lastSelectedNode","mouseIsDown","isDragging","lastMousePos","x","y","preventDrag","currentValue","this","mounted","isRoot","document","addEventListener","onDocumentMouseupHandler","beforeDestroy","removeEventListener","watch","newValue","computed","cursorPosition","getParent","nodes","nodeModels","copy","getNodes","children","gaps","push","selectionSize","getSelected","dragSize","getDraggable","methods","setCursorPosition","pos","_this","parentPath","arguments","undefined","isVisible","map","nodeModel","ind","nodePath","concat","getNode","path","siblings","slice","getNodeSiblings","isExpanded","isDraggable","isSelectable","title","isLeaf","isSelected","pathStr","JSON","stringify","isFirstChild","isLastChild","emitInput","getRoot","$emit","emitSelect","selectedNodes","event","emitBeforeDrop","draggingNodes","position","cancel","emitDrop","emitToggle","toggledNode","emitNodeClick","node","emitNodeDblclick","emitNodeContextmenu","onExternalDragoverHandler","preventDefault","getCursorPositionFromCoords","clientX","clientY","onExternalDropHandler","select","_this2","addToSelection","multiselectKeyIsPressed","find","key","selectedNode","newNodes","shiftSelectionMode","shiftKey","shiftSelectionStarted","traverse","onMousemoveHandler","initialDraggingState","isDragStarted","$root","$el","rootRect","getBoundingClientRect","$dragInfo","$refs","dragInfo","dragInfoTop","top","scrollTop","style","marginBottom","dragInfoLeft","left","destNode","placement","scrollBottomLine","bottom","scrollDownSpeed","scrollTopLine","scrollTopSpeed","startScroll","stopScroll","$target","elementFromPoint","$nodeItem","getAttribute","getClosetElementWithPath","parse","nodeHeight","offsetHeight","offsetY","height","getLastNode","getFirstNode","parentElement","onMouseleaveHandler","getNodeEl","querySelector","lastNode","getNextNode","_this3","resultNode","comparePaths","getPrevNode","_this4","prevNodes","path1","path2","onNodeMousedownHandler","button","speed","_this5","setInterval","clearInterval","onNodeMouseupHandler","targetNode","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","draggingNode","stopDrag","checkNodeIsParent","err","return","nodeModelsSubjectToInsert","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","draggingNodeModel","cancelled","nodeModelsToInsert","_i","insertModels","traverseModels","_markToDelete","splice","onToggleHandler","updateNode","stopPropagation","$parent","patch","assign","cb","shouldStop","nodeInd","itemPath","remove","paths","pathsStr","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","destSiblings","destNodeModel","_destNodeModel$childr","unshift","apply","_toConsumableArray","insertInd","insert","sourceNode","destPath","entity","render","_vm","_h","$createElement","_c","_self","staticClass","class","sl-vue-tree-root","on","mousemove","mouseleave","dragend","$event","onDragendHandler","ref","_l","sl-vue-tree-selected","visibility","dragover","_v","sl-vue-tree-cursor-hover","sl-vue-tree-cursor-inside","sl-vue-tree-node-is-leaf","sl-vue-tree-node-is-folder","attrs","mousedown","mouseup","contextmenu","dblclick","click","drop","gapInd","_t","_e","_s","fromCharCode","scopedSlots","_u","fn","directives","rawName","expression","_withStripped","Component","scriptExports","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","normalizeComponent","__file","__webpack_exports__"],"mappings":"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","file":"sl-vue-tree.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SlVueTree\"] = factory();\n\telse\n\t\troot[\"SlVueTree\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\r\nexport default {\r\n  name: 'sl-vue-tree',\r\n  props: {\r\n    value: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    edgeSize: {\r\n      type: Number,\r\n      default: 3\r\n    },\r\n    showBranches: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    level: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    parentInd: {\r\n      type: Number\r\n    },\r\n    allowMultiselect: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    allowToggleBranch: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    multiselectKey: {\r\n      type: [String, Array],\r\n      default: function () {\r\n        return ['ctrlKey', 'metaKey']\r\n      },\r\n      validator: function (value) {\r\n        let allowedKeys = ['ctrlKey', 'metaKey', 'altKey'];\r\n        let multiselectKeys = Array.isArray(value) ? value : [value];\r\n        multiselectKeys = multiselectKeys.filter(keyName => allowedKeys.indexOf(keyName ) !== -1);\r\n        return !!multiselectKeys.length;\r\n      }\r\n    },\r\n    scrollAreaHeight: {\r\n      type: Number,\r\n      default: 70\r\n    },\r\n    maxScrollSpeed: {\r\n      type: Number,\r\n      default: 20\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      rootCursorPosition: null,\r\n      scrollIntervalId: 0,\r\n      scrollSpeed: 0,\r\n      lastSelectedNode: null,\r\n      mouseIsDown: false,\r\n      isDragging: false,\r\n      lastMousePos: {x: 0, y: 0},\r\n      preventDrag: false,\r\n      currentValue: this.value\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    if (this.isRoot) {\r\n      document.addEventListener('mouseup', this.onDocumentMouseupHandler);\r\n    }\r\n  },\r\n\r\n  beforeDestroy() {\r\n    document.removeEventListener('mouseup', this.onDocumentMouseupHandler);\r\n  },\r\n\r\n  watch: {\r\n    value: function (newValue) {\r\n      this.currentValue = newValue;\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    cursorPosition() {\r\n      if (this.isRoot) return this.rootCursorPosition;\r\n      return this.getParent().cursorPosition;\r\n    },\r\n\r\n    nodes() {\r\n      if (this.isRoot) {\r\n        const nodeModels = this.copy(this.currentValue);\r\n        return this.getNodes(nodeModels);\r\n      }\r\n\r\n      return this.getParent().nodes[this.parentInd].children;\r\n    },\r\n    /**\r\n   * gaps is using for nodes indentation\r\n   * @returns {number[]}\r\n   */\r\n    gaps() {\r\n      const gaps = [];\r\n      let i = this.level - 1;\r\n      if (!this.showBranches) i++;\r\n      while (i-- > 0) gaps.push(i);\r\n      return gaps;\r\n    },\r\n\r\n    isRoot() {\r\n      return !this.level\r\n    },\r\n\r\n    selectionSize() {\r\n      return this.getSelected().length;\r\n    },\r\n\r\n    dragSize() {\r\n      return this.getDraggable().length;\r\n    }\r\n  },\r\n  methods: {\r\n\r\n    setCursorPosition(pos) {\r\n      if (this.isRoot) {\r\n        this.rootCursorPosition = pos;\r\n        return;\r\n      }\r\n      this.getParent().setCursorPosition(pos);\r\n    },\r\n\r\n    getNodes(nodeModels, parentPath = [], isVisible = true) {\r\n\r\n      return nodeModels.map((nodeModel, ind) => {\r\n        const nodePath = parentPath.concat(ind);\r\n        return this.getNode(nodePath, nodeModel, nodeModels, isVisible);\r\n      })\r\n    },\r\n\r\n    getNode(\r\n      path,\r\n      nodeModel = null,\r\n      siblings = null,\r\n      isVisible = null\r\n    ) {\r\n      const ind = path.slice(-1)[0];\r\n\r\n      // calculate nodeModel, siblings, isVisible fields if it is not passed as arguments\r\n      siblings = siblings || this.getNodeSiblings(this.currentValue, path);\r\n      nodeModel = nodeModel || (siblings && siblings[ind]) || null;\r\n\r\n      if (isVisible == null) {\r\n        isVisible = this.isVisible(path);\r\n      }\r\n\r\n      if (!nodeModel) return null;\r\n\r\n      const isExpanded = nodeModel.isExpanded == void 0 ? true : !!nodeModel.isExpanded;\r\n      const isDraggable = nodeModel.isDraggable == void 0 ? true : !!nodeModel.isDraggable;\r\n      const isSelectable = nodeModel.isSelectable == void 0 ? true : !!nodeModel.isSelectable;\r\n\r\n      const node = {\r\n\r\n        // define the all ISlTreeNodeModel props\r\n        title: nodeModel.title,\r\n        isLeaf: !!nodeModel.isLeaf,\r\n        children: nodeModel.children ? this.getNodes(nodeModel.children, path, isExpanded) : [],\r\n        isSelected: !!nodeModel.isSelected,\r\n        isExpanded,\r\n        isVisible,\r\n        isDraggable,\r\n        isSelectable,\r\n        data: nodeModel.data !== void 0 ? nodeModel.data : {},\r\n\r\n        // define the all ISlTreeNode computed props\r\n        path: path,\r\n        pathStr: JSON.stringify(path),\r\n        level: path.length,\r\n        ind,\r\n        isFirstChild: ind == 0,\r\n        isLastChild: ind === siblings.length - 1\r\n      };\r\n      return node;\r\n    },\r\n\r\n    isVisible(path) {\r\n      if (path.length < 2) return true;\r\n      let nodeModels = this.currentValue;\r\n\r\n      for (let i = 0; i < path.length - 1; i++) {\r\n        let ind = path[i];\r\n        let nodeModel = nodeModels[ind];\r\n        let isExpanded = nodeModel.isExpanded == void 0 ? true : !!nodeModel.isExpanded;\r\n        if (!isExpanded) return false;\r\n        nodeModels = nodeModel.children;\r\n      }\r\n\r\n      return true;\r\n    },\r\n\r\n    emitInput(newValue) {\r\n      this.currentValue = newValue;\r\n      this.getRoot().$emit('input', newValue);\r\n    },\r\n\r\n    emitSelect(selectedNodes, event) {\r\n      this.getRoot().$emit('select', selectedNodes, event);\r\n    },\r\n\r\n    emitBeforeDrop(draggingNodes, position, cancel) {\r\n      this.getRoot().$emit('beforedrop', draggingNodes, position, cancel);\r\n    },\r\n\r\n    emitDrop(draggingNodes, position, event) {\r\n      this.getRoot().$emit('drop', draggingNodes, position, event);\r\n    },\r\n\r\n    emitToggle(toggledNode, event) {\r\n      this.getRoot().$emit('toggle', toggledNode, event);\r\n    },\r\n\r\n    emitNodeClick(node, event) {\r\n      this.getRoot().$emit('nodeclick', node, event);\r\n    },\r\n\r\n    emitNodeDblclick(node, event) {\r\n      this.getRoot().$emit('nodedblclick', node, event);\r\n    },\r\n\r\n    emitNodeContextmenu(node, event) {\r\n      this.getRoot().$emit('nodecontextmenu', node, event);\r\n    },\r\n\r\n    onExternalDragoverHandler(node, event) {\r\n      event.preventDefault();\r\n      const root = this.getRoot();\r\n      const cursorPosition = root.getCursorPositionFromCoords(event.clientX, event.clientY);\r\n      root.setCursorPosition(cursorPosition);\r\n      root.$emit('externaldragover', cursorPosition, event);\r\n    },\r\n\r\n    onExternalDropHandler(node, event) {\r\n      const root = this.getRoot();\r\n      const cursorPosition = root.getCursorPositionFromCoords(event.clientX, event.clientY);\r\n      root.$emit('externaldrop', cursorPosition, event);\r\n      this.setCursorPosition(null);\r\n    },\r\n\r\n    select(path, addToSelection = false, event = null) {\r\n      const multiselectKeys = Array.isArray(this.multiselectKey) ?\r\n        this.multiselectKey:\r\n        [this.multiselectKey];\r\n      const multiselectKeyIsPressed = event && !!multiselectKeys.find(key => event[key]);\r\n      addToSelection = (multiselectKeyIsPressed || addToSelection) && this.allowMultiselect ;\r\n\r\n      const selectedNode = this.getNode(path);\r\n      if (!selectedNode) return null;\r\n      const newNodes = this.copy(this.currentValue);\r\n      const shiftSelectionMode = this.allowMultiselect && event && event.shiftKey && this.lastSelectedNode;\r\n      const selectedNodes = [];\r\n      let shiftSelectionStarted = false;\r\n\r\n      this.traverse((node, nodeModel) => {\r\n\r\n\r\n        if (shiftSelectionMode) {\r\n          if (node.pathStr === selectedNode.pathStr || node.pathStr === this.lastSelectedNode.pathStr) {\r\n            nodeModel.isSelected = node.isSelectable;\r\n            shiftSelectionStarted = !shiftSelectionStarted;\r\n          }\r\n          if (shiftSelectionStarted) nodeModel.isSelected = node.isSelectable;\r\n        } else if (node.pathStr === selectedNode.pathStr) {\r\n          nodeModel.isSelected = node.isSelectable;\r\n        } else if (!addToSelection) {\r\n          if (nodeModel.isSelected) nodeModel.isSelected = false;\r\n        }\r\n\r\n        if (nodeModel.isSelected) selectedNodes.push(node);\r\n\r\n      }, newNodes);\r\n\r\n\r\n      this.lastSelectedNode = selectedNode;\r\n      this.emitInput(newNodes);\r\n      this.emitSelect(selectedNodes, event);\r\n      return selectedNode;\r\n    },\r\n\r\n    onMousemoveHandler(event) {\r\n      if (!this.isRoot) {\r\n        this.getRoot().onMousemoveHandler(event);\r\n        return;\r\n      }\r\n\r\n      if (this.preventDrag) return;\r\n\r\n      const initialDraggingState = this.isDragging;\r\n      const isDragging =\r\n        this.isDragging || (\r\n        this.mouseIsDown &&\r\n        (this.lastMousePos.x !== event.clientX || this.lastMousePos.y !== event.clientY)\r\n      );\r\n\r\n      const isDragStarted = initialDraggingState === false && isDragging === true;\r\n\r\n      this.lastMousePos = {\r\n        x: event.clientX,\r\n        y: event.clientY\r\n      };\r\n\r\n      if (!isDragging) return;\r\n\r\n      const $root = this.getRoot().$el;\r\n      const rootRect = $root.getBoundingClientRect();\r\n      const $dragInfo = this.$refs.dragInfo;\r\n      const dragInfoTop = (event.clientY - rootRect.top + $root.scrollTop - ($dragInfo.style.marginBottom | 0) );\r\n      const dragInfoLeft = (event.clientX - rootRect.left);\r\n\r\n      $dragInfo.style.top = dragInfoTop + 'px';\r\n      $dragInfo.style.left = dragInfoLeft + 'px';\r\n\r\n      const cursorPosition = this.getCursorPositionFromCoords(event.clientX, event.clientY);\r\n      const destNode = cursorPosition.node;\r\n      const placement = cursorPosition.placement;\r\n\r\n      if (isDragStarted && !destNode.isSelected) {\r\n        this.select(destNode.path, false, event);\r\n      }\r\n\r\n      const draggableNodes = this.getDraggable();\r\n      if (!draggableNodes.length) {\r\n        this.preventDrag = true;\r\n        return;\r\n      }\r\n\r\n      this.isDragging = isDragging;\r\n\r\n      this.setCursorPosition({ node: destNode, placement });\r\n\r\n      const scrollBottomLine = rootRect.bottom - this.scrollAreaHeight;\r\n      const scrollDownSpeed = (event.clientY - scrollBottomLine) / (rootRect.bottom - scrollBottomLine);\r\n      const scrollTopLine = rootRect.top + this.scrollAreaHeight;\r\n      const scrollTopSpeed = (scrollTopLine - event.clientY) / (scrollTopLine - rootRect.top);\r\n\r\n      if (scrollDownSpeed > 0) {\r\n        this.startScroll(scrollDownSpeed);\r\n      } else if (scrollTopSpeed > 0) {\r\n        this.startScroll(-scrollTopSpeed)\r\n      } else {\r\n        this.stopScroll();\r\n      }\r\n    },\r\n\r\n    getCursorPositionFromCoords(x, y) {\r\n      const $target = document.elementFromPoint(x, y);\r\n      const $nodeItem = $target.getAttribute('path') ? $target : this.getClosetElementWithPath($target);\r\n      let destNode;\r\n      let placement;\r\n\r\n      if ($nodeItem) {\r\n\r\n        if (!$nodeItem) return;\r\n\r\n        destNode = this.getNode(JSON.parse($nodeItem.getAttribute('path')));\r\n\r\n        const nodeHeight = $nodeItem.offsetHeight;\r\n        const edgeSize = this.edgeSize;\r\n        const offsetY = y - $nodeItem.getBoundingClientRect().top;\r\n\r\n\r\n        if (destNode.isLeaf) {\r\n          placement = offsetY >= nodeHeight / 2 ? 'after' : 'before';\r\n        } else {\r\n          if (offsetY <= edgeSize) {\r\n            placement = 'before';\r\n          } else if (offsetY >= nodeHeight - edgeSize) {\r\n            placement = 'after';\r\n          } else {\r\n            placement = 'inside';\r\n          }\r\n        }\r\n      } else {\r\n        const $root = this.getRoot().$el;\r\n        const rootRect = $root.getBoundingClientRect();\r\n        if (y > rootRect.top + (rootRect.height / 2)) {\r\n          placement = 'after';\r\n          destNode = this.getLastNode();\r\n        } else {\r\n          placement = 'before';\r\n          destNode = this.getFirstNode();\r\n        }\r\n      }\r\n\r\n      return { node: destNode, placement };\r\n    },\r\n\r\n    getClosetElementWithPath($el) {\r\n      if (!$el) return null;\r\n      if ($el.getAttribute('path')) return $el;\r\n      return this.getClosetElementWithPath($el.parentElement);\r\n    },\r\n\r\n    onMouseleaveHandler(event) {\r\n      if (!this.isRoot || !this.isDragging) return;\r\n      const $root = this.getRoot().$el;\r\n      const rootRect = $root.getBoundingClientRect();\r\n      if (event.clientY >= rootRect.bottom) {\r\n        this.setCursorPosition({ node: this.nodes.slice(-1)[0], placement: 'after' });\r\n      } else if (event.clientY < rootRect.top) {\r\n        this.setCursorPosition({ node: this.getFirstNode(), placement: 'before'});\r\n      }\r\n    },\r\n\r\n    getNodeEl(path) {\r\n      this.getRoot().$el.querySelector(`[path=\"${JSON.stringify(path)}\"]`);\r\n    },\r\n\r\n    getLastNode() {\r\n      let lastNode  = null;\r\n      this.traverse((node) => {\r\n        lastNode = node;\r\n      });\r\n      return lastNode;\r\n    },\r\n\r\n    getFirstNode() {\r\n      return this.getNode([0]);\r\n    },\r\n\r\n    getNextNode(path, filter = null) {\r\n\r\n      let resultNode = null;\r\n\r\n      this.traverse((node) => {\r\n        if (this.comparePaths(node.path, path) < 1) return;\r\n\r\n        if (!filter || filter(node)) {\r\n          resultNode = node;\r\n          return false; // stop traverse\r\n        }\r\n\r\n      });\r\n\r\n      return resultNode;\r\n    },\r\n\r\n    getPrevNode(path, filter) {\r\n      let prevNodes = [];\r\n\r\n      this.traverse((node) => {\r\n        if (this.comparePaths(node.path, path) >= 0) {\r\n          return false;\r\n        }\r\n        prevNodes.push(node);\r\n      });\r\n\r\n      let i = prevNodes.length;\r\n      while (i--) {\r\n        const node = prevNodes[i];\r\n        if (!filter || filter(node)) return node;\r\n      }\r\n\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * returns 1 if path1 > path2\r\n     * returns -1 if path1 < path2\r\n     * returns 0 if path1 == path2\r\n     *\r\n     * examples\r\n     *\r\n     * [1, 2, 3] < [1, 2, 4]\r\n     * [1, 1, 3] < [1, 2, 3]\r\n     * [1, 2, 3] > [1, 2, 0]\r\n     * [1, 2, 3] > [1, 1, 3]\r\n     * [1, 2] < [1, 2, 0]\r\n     *\r\n     */\r\n    comparePaths(path1, path2) {\r\n      for (let i = 0; i < path1.length; i++) {\r\n        if (path2[i] == void 0) return 1;\r\n        if (path1[i] > path2[i]) return 1;\r\n        if (path1[i] < path2[i]) return -1;\r\n      }\r\n      return path2[path1.length] == void 0 ? 0 : -1;\r\n    },\r\n\r\n    onNodeMousedownHandler(event, node) {\r\n      // handle only left mouse button\r\n      if (event.button !== 0) return;\r\n\r\n      if (!this.isRoot) {\r\n        this.getRoot().onNodeMousedownHandler(event, node);\r\n        return;\r\n      }\r\n      this.mouseIsDown = true;\r\n    },\r\n\r\n\r\n    startScroll(speed) {\r\n      const $root = this.getRoot().$el;\r\n      if (this.scrollSpeed === speed) {\r\n        return;\r\n      } else if (this.scrollIntervalId) {\r\n        this.stopScroll();\r\n      }\r\n\r\n      this.scrollSpeed = speed;\r\n      this.scrollIntervalId = setInterval(() => {\r\n        $root.scrollTop += this.maxScrollSpeed * speed;\r\n      }, 20);\r\n    },\r\n\r\n    stopScroll() {\r\n      clearInterval(this.scrollIntervalId);\r\n      this.scrollIntervalId = 0;\r\n      this.scrollSpeed = 0;\r\n    },\r\n\r\n    onDocumentMouseupHandler(event) {\r\n      if (this.isDragging) this.onNodeMouseupHandler(event);\r\n    },\r\n\r\n    onNodeMouseupHandler(event, targetNode = null) {\r\n\r\n      // handle only left mouse button\r\n      if (event.button !== 0) return;\r\n\r\n      if (!this.isRoot) {\r\n        this.getRoot().onNodeMouseupHandler(event, targetNode);\r\n        return;\r\n      }\r\n\r\n      this.mouseIsDown = false;\r\n\r\n      if (!this.isDragging && targetNode && !this.preventDrag) {\r\n        this.select(targetNode.path, false, event);\r\n      }\r\n\r\n      this.preventDrag = false;\r\n\r\n      if (!this.cursorPosition) {\r\n        this.stopDrag();\r\n        return;\r\n      };\r\n\r\n\r\n      const draggingNodes = this.getDraggable();\r\n\r\n      // check that nodes is possible to insert\r\n      for (let draggingNode of draggingNodes) {\r\n        if (draggingNode.pathStr == this.cursorPosition.node.pathStr) {\r\n          this.stopDrag();\r\n          return;\r\n        }\r\n\r\n        if (this.checkNodeIsParent(draggingNode, this.cursorPosition.node)) {\r\n          this.stopDrag();\r\n          return;\r\n        }\r\n      }\r\n\r\n      const newNodes = this.copy(this.currentValue);\r\n      const nodeModelsSubjectToInsert = [];\r\n\r\n      // find dragging model to delete\r\n      for (let draggingNode of draggingNodes) {\r\n        const sourceSiblings = this.getNodeSiblings(newNodes, draggingNode.path);\r\n        const draggingNodeModel = sourceSiblings[draggingNode.ind];\r\n        nodeModelsSubjectToInsert.push(draggingNodeModel);\r\n      }\r\n\r\n      // allow the drop to be cancelled\r\n      let cancelled = false;\r\n      this.emitBeforeDrop(draggingNodes, this.cursorPosition, () => cancelled = true);\r\n\r\n      if (cancelled) {\r\n          this.stopDrag();\r\n          return;\r\n      }\r\n\r\n      const nodeModelsToInsert = [];\r\n\r\n      // mark dragging model to delete\r\n      for (let draggingNodeModel of nodeModelsSubjectToInsert) {\r\n          nodeModelsToInsert.push(this.copy(draggingNodeModel));\r\n          draggingNodeModel['_markToDelete'] = true;\r\n      }\r\n\r\n      // insert dragging nodes to the new place\r\n      this.insertModels(this.cursorPosition, nodeModelsToInsert, newNodes);\r\n\r\n\r\n      // delete dragging node from the old place\r\n      this.traverseModels((nodeModel, siblings, ind) => {\r\n        if (!nodeModel._markToDelete) return;\r\n        siblings.splice(ind, 1);\r\n      }, newNodes);\r\n\r\n\r\n      this.lastSelectedNode = null;\r\n      this.emitInput(newNodes);\r\n      this.emitDrop(draggingNodes, this.cursorPosition, event);\r\n      this.stopDrag();\r\n    },\r\n\r\n\r\n    onToggleHandler(event, node) {\r\n      if (!this.allowToggleBranch) return;\r\n\r\n      this.updateNode(node.path, { isExpanded: !node.isExpanded });\r\n      this.emitToggle(node, event);\r\n      event.stopPropagation();\r\n    },\r\n\r\n    stopDrag() {\r\n      this.isDragging = false;\r\n      this.mouseIsDown = false;\r\n      this.setCursorPosition(null);\r\n      this.stopScroll();\r\n    },\r\n\r\n\r\n    getParent() {\r\n      return this.$parent;\r\n    },\r\n\r\n    getRoot() {\r\n      if (this.isRoot) return this;\r\n      return this.getParent().getRoot();\r\n    },\r\n\r\n    getNodeSiblings(nodes, path) {\r\n      if (path.length === 1) return nodes;\r\n      return this.getNodeSiblings(nodes[path[0]].children, path.slice(1));\r\n    },\r\n\r\n\r\n    updateNode(path, patch) {\r\n      if (!this.isRoot) {\r\n        this.getParent().updateNode(path, patch);\r\n        return;\r\n      }\r\n\r\n      const pathStr = JSON.stringify(path);\r\n      const newNodes = this.copy(this.currentValue);\r\n      this.traverse((node, nodeModel) => {\r\n        if (node.pathStr !== pathStr) return;\r\n        Object.assign(nodeModel, patch);\r\n      }, newNodes);\r\n\r\n      this.emitInput(newNodes);\r\n    },\r\n\r\n    getSelected() {\r\n      const selectedNodes = [];\r\n      this.traverse((node) => {\r\n        if (node.isSelected) selectedNodes.push(node);\r\n      });\r\n      return selectedNodes;\r\n    },\r\n\r\n    getDraggable() {\r\n      const selectedNodes = [];\r\n      this.traverse((node) => {\r\n        if (node.isSelected && node.isDraggable) selectedNodes.push(node);\r\n      });\r\n      return selectedNodes;\r\n    },\r\n\r\n\r\n    traverse(\r\n      cb,\r\n      nodeModels = null,\r\n      parentPath = []\r\n    ) {\r\n      if (!nodeModels) nodeModels = this.currentValue;\r\n\r\n      let shouldStop = false;\r\n\r\n      const nodes = [];\r\n\r\n      for (let nodeInd = 0; nodeInd < nodeModels.length; nodeInd++) {\r\n        const nodeModel = nodeModels[nodeInd];\r\n        const itemPath = parentPath.concat(nodeInd);\r\n        const node = this.getNode(itemPath, nodeModel, nodeModels);\r\n        shouldStop = cb(node, nodeModel, nodeModels) === false;\r\n        nodes.push(node);\r\n\r\n        if (shouldStop) break;\r\n\r\n        if (nodeModel.children) {\r\n          shouldStop = this.traverse(cb, nodeModel.children, itemPath) === false;\r\n          if (shouldStop) break;\r\n        }\r\n      }\r\n\r\n      return !shouldStop ? nodes : false;\r\n    },\r\n\r\n    traverseModels(cb, nodeModels) {\r\n      let i = nodeModels.length;\r\n      while (i--) {\r\n        const nodeModel = nodeModels[i];\r\n        if (nodeModel.children) this.traverseModels(cb, nodeModel.children);\r\n        cb(nodeModel, nodeModels, i);\r\n      }\r\n      return nodeModels;\r\n    },\r\n\r\n    remove(paths) {\r\n      const pathsStr = paths.map(path => JSON.stringify(path));\r\n      const newNodes = this.copy(this.currentValue);\r\n      this.traverse( (node, nodeModel, siblings) => {\r\n        for (const pathStr of pathsStr) {\r\n          if (node.pathStr === pathStr) nodeModel._markToDelete = true;\r\n        }\r\n      }, newNodes);\r\n\r\n      this.traverseModels((nodeModel, siblings, ind) => {\r\n        if (!nodeModel._markToDelete) return;\r\n        siblings.splice(ind, 1);\r\n      }, newNodes);\r\n\r\n      this.emitInput(newNodes);\r\n    },\r\n\r\n    insertModels(cursorPosition, nodeModels, newNodes) {\r\n      const destNode = cursorPosition.node;\r\n      const destSiblings = this.getNodeSiblings(newNodes, destNode.path);\r\n      const destNodeModel = destSiblings[destNode.ind];\r\n\r\n      if (cursorPosition.placement === 'inside') {\r\n        destNodeModel.children = destNodeModel.children || [];\r\n        destNodeModel.children.unshift(...nodeModels);\r\n      } else {\r\n        const insertInd = cursorPosition.placement === 'before' ?\r\n          destNode.ind :\r\n          destNode.ind + 1;\r\n\r\n        destSiblings.splice(insertInd, 0, ...nodeModels);\r\n      }\r\n    },\r\n\r\n    insert(cursorPosition, nodeModel) {\r\n      const nodeModels = Array.isArray(nodeModel) ? nodeModel : [nodeModel];\r\n      const newNodes = this.copy(this.currentValue);\r\n\r\n      this.insertModels(cursorPosition, nodeModels, newNodes);\r\n\r\n      this.emitInput(newNodes);\r\n    },\r\n\r\n    checkNodeIsParent(sourceNode, destNode) {\r\n      const destPath = destNode.path;\r\n      return JSON.stringify(destPath.slice(0, sourceNode.path.length)) == sourceNode.pathStr;\r\n    },\r\n\r\n    copy(entity) {\r\n      return JSON.parse(JSON.stringify(entity));\r\n    }\r\n\r\n  }\r\n};\r\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      staticClass: \"sl-vue-tree\",\n      class: { \"sl-vue-tree-root\": _vm.isRoot },\n      on: {\n        mousemove: _vm.onMousemoveHandler,\n        mouseleave: _vm.onMouseleaveHandler,\n        dragend: function($event) {\n          _vm.onDragendHandler(null, $event)\n        }\n      }\n    },\n    [\n      _c(\n        \"div\",\n        { ref: \"nodes\", staticClass: \"sl-vue-tree-nodes-list\" },\n        [\n          _vm._l(_vm.nodes, function(node, nodeInd) {\n            return _c(\n              \"div\",\n              {\n                staticClass: \"sl-vue-tree-node\",\n                class: { \"sl-vue-tree-selected\": node.isSelected }\n              },\n              [\n                _c(\"div\", {\n                  staticClass: \"sl-vue-tree-cursor sl-vue-tree-cursor_before\",\n                  style: {\n                    visibility:\n                      _vm.cursorPosition &&\n                      _vm.cursorPosition.node.pathStr === node.pathStr &&\n                      _vm.cursorPosition.placement === \"before\"\n                        ? \"visible\"\n                        : \"hidden\"\n                  },\n                  on: {\n                    dragover: function($event) {\n                      $event.preventDefault()\n                    }\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  {\n                    staticClass: \"sl-vue-tree-node-item\",\n                    class: {\n                      \"sl-vue-tree-cursor-hover\":\n                        _vm.cursorPosition &&\n                        _vm.cursorPosition.node.pathStr === node.pathStr,\n\n                      \"sl-vue-tree-cursor-inside\":\n                        _vm.cursorPosition &&\n                        _vm.cursorPosition.placement === \"inside\" &&\n                        _vm.cursorPosition.node.pathStr === node.pathStr,\n                      \"sl-vue-tree-node-is-leaf\": node.isLeaf,\n                      \"sl-vue-tree-node-is-folder\": !node.isLeaf\n                    },\n                    attrs: { path: node.pathStr },\n                    on: {\n                      mousedown: function($event) {\n                        _vm.onNodeMousedownHandler($event, node)\n                      },\n                      mouseup: function($event) {\n                        _vm.onNodeMouseupHandler($event, node)\n                      },\n                      contextmenu: function($event) {\n                        _vm.emitNodeContextmenu(node, $event)\n                      },\n                      dblclick: function($event) {\n                        _vm.emitNodeDblclick(node, $event)\n                      },\n                      click: function($event) {\n                        _vm.emitNodeClick(node, $event)\n                      },\n                      dragover: function($event) {\n                        _vm.onExternalDragoverHandler(node, $event)\n                      },\n                      drop: function($event) {\n                        _vm.onExternalDropHandler(node, $event)\n                      }\n                    }\n                  },\n                  [\n                    _vm._l(_vm.gaps, function(gapInd) {\n                      return _c(\"div\", { staticClass: \"sl-vue-tree-gap\" })\n                    }),\n                    _vm._v(\" \"),\n                    _vm.level && _vm.showBranches\n                      ? _c(\n                          \"div\",\n                          { staticClass: \"sl-vue-tree-branch\" },\n                          [\n                            _vm._t(\n                              \"branch\",\n                              [\n                                !node.isLastChild\n                                  ? _c(\"span\", [\n                                      _vm._v(\n                                        \"\\n            \" +\n                                          _vm._s(String.fromCharCode(0x251c)) +\n                                          _vm._s(String.fromCharCode(0x2500)) +\n                                          \" \\n          \"\n                                      )\n                                    ])\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                node.isLastChild\n                                  ? _c(\"span\", [\n                                      _vm._v(\n                                        \"\\n            \" +\n                                          _vm._s(String.fromCharCode(0x2514)) +\n                                          _vm._s(String.fromCharCode(0x2500)) +\n                                          \" \\n          \"\n                                      )\n                                    ])\n                                  : _vm._e()\n                              ],\n                              { node: node }\n                            )\n                          ],\n                          2\n                        )\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      { staticClass: \"sl-vue-tree-title\" },\n                      [\n                        !node.isLeaf\n                          ? _c(\n                              \"span\",\n                              {\n                                staticClass: \"sl-vue-tree-toggle\",\n                                on: {\n                                  click: function($event) {\n                                    _vm.onToggleHandler($event, node)\n                                  }\n                                }\n                              },\n                              [\n                                _vm._t(\n                                  \"toggle\",\n                                  [\n                                    _c(\"span\", [\n                                      _vm._v(\n                                        \"\\n             \" +\n                                          _vm._s(\n                                            !node.isLeaf\n                                              ? node.isExpanded\n                                                ? \"-\"\n                                                : \"+\"\n                                              : \"\"\n                                          ) +\n                                          \"\\n            \"\n                                      )\n                                    ])\n                                  ],\n                                  { node: node }\n                                )\n                              ],\n                              2\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _vm._t(\"title\", [_vm._v(_vm._s(node.title))], {\n                          node: node\n                        }),\n                        _vm._v(\" \"),\n                        !node.isLeaf &&\n                        node.children.length == 0 &&\n                        node.isExpanded\n                          ? _vm._t(\"empty-node\", null, { node: node })\n                          : _vm._e()\n                      ],\n                      2\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      { staticClass: \"sl-vue-tree-sidebar\" },\n                      [_vm._t(\"sidebar\", null, { node: node })],\n                      2\n                    )\n                  ],\n                  2\n                ),\n                _vm._v(\" \"),\n                node.children && node.children.length && node.isExpanded\n                  ? _c(\"sl-vue-tree\", {\n                      attrs: {\n                        value: node.children,\n                        level: node.level,\n                        parentInd: nodeInd,\n                        allowMultiselect: _vm.allowMultiselect,\n                        allowToggleBranch: _vm.allowToggleBranch,\n                        edgeSize: _vm.edgeSize,\n                        showBranches: _vm.showBranches\n                      },\n                      on: {\n                        dragover: function($event) {\n                          $event.preventDefault()\n                        }\n                      },\n                      scopedSlots: _vm._u([\n                        {\n                          key: \"title\",\n                          fn: function(ref) {\n                            var node = ref.node\n                            return [\n                              _vm._t(\"title\", [_vm._v(_vm._s(node.title))], {\n                                node: node\n                              })\n                            ]\n                          }\n                        },\n                        {\n                          key: \"toggle\",\n                          fn: function(ref) {\n                            var node = ref.node\n                            return [\n                              _vm._t(\n                                \"toggle\",\n                                [\n                                  _c(\"span\", [\n                                    _vm._v(\n                                      \"\\n             \" +\n                                        _vm._s(\n                                          !node.isLeaf\n                                            ? node.isExpanded\n                                              ? \"-\"\n                                              : \"+\"\n                                            : \"\"\n                                        ) +\n                                        \"\\n          \"\n                                    )\n                                  ])\n                                ],\n                                { node: node }\n                              )\n                            ]\n                          }\n                        },\n                        {\n                          key: \"sidebar\",\n                          fn: function(ref) {\n                            var node = ref.node\n                            return [_vm._t(\"sidebar\", null, { node: node })]\n                          }\n                        },\n                        {\n                          key: \"empty-node\",\n                          fn: function(ref) {\n                            var node = ref.node\n                            return [\n                              !node.isLeaf &&\n                              node.children.length == 0 &&\n                              node.isExpanded\n                                ? _vm._t(\"empty-node\", null, { node: node })\n                                : _vm._e()\n                            ]\n                          }\n                        }\n                      ])\n                    })\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"div\", {\n                  staticClass: \"sl-vue-tree-cursor sl-vue-tree-cursor_after\",\n                  style: {\n                    visibility:\n                      _vm.cursorPosition &&\n                      _vm.cursorPosition.node.pathStr === node.pathStr &&\n                      _vm.cursorPosition.placement === \"after\"\n                        ? \"visible\"\n                        : \"hidden\"\n                  },\n                  on: {\n                    dragover: function($event) {\n                      $event.preventDefault()\n                    }\n                  }\n                })\n              ],\n              1\n            )\n          }),\n          _vm._v(\" \"),\n          _vm.isRoot\n            ? _c(\n                \"div\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.isDragging,\n                      expression: \"isDragging\"\n                    }\n                  ],\n                  ref: \"dragInfo\",\n                  staticClass: \"sl-vue-tree-drag-info\"\n                },\n                [\n                  _vm._t(\"draginfo\", [\n                    _vm._v(\n                      \"\\n        Items: \" +\n                        _vm._s(_vm.selectionSize) +\n                        \"\\n      \"\n                    )\n                  ])\n                ],\n                2\n              )\n            : _vm._e()\n        ],\n        2\n      )\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\nexport { render, staticRenderFns }\nif (module.hot) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-hot-reload-api\")      .rerender(\"data-v-0b7c263a\", { render: render, staticRenderFns: staticRenderFns })\n  }\n}","var disposed = false\n/* script */\nexport * from \"!!babel-loader!./sl-vue-tree.js\"\nimport __vue_script__ from \"!!babel-loader!./sl-vue-tree.js\"/* template */\nimport {render as __vue_render__, staticRenderFns as __vue_static_render_fns__} from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0b7c263a\\\",\\\"hasScoped\\\":false,\\\"optionsId\\\":\\\"0\\\",\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./sl-vue-tree.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nimport normalizeComponent from \"!../node_modules/vue-loader/lib/runtime/component-normalizer\"\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_render__,\n  __vue_static_render_fns__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"src\\\\sl-vue-tree.vue\"\n\n/* hot reload */\nif (module.hot) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-0b7c263a\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-0b7c263a\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nexport default Component.exports\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  scriptExports = scriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof scriptExports.default\n  if (type === 'object' || type === 'function') {\n    scriptExports = scriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n"],"sourceRoot":""}